// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  USER
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  role      Role      @default(USER)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  blogs     Blog[]
  projects  Project[]
}

model Blog {
  id         Int      @id @default(autoincrement())
  title      String
  content    String
  thumbnail  String?
  tags       String[]
  isFeatured Boolean  @default(false)
  views      Int      @default(0)
  authorId   Int
  author     User     @relation(fields: [authorId], references: [id])
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Project {
  id           Int      @id @default(autoincrement())
  title        String
  description  String
  thumbnail    String?
  liveUrl      String
  frontendRepo String?
  backendRepo  String?
  features     String[]
  techStack    String[]
  published    Boolean  @default(true)
  authorId     Int
  author       User     @relation(fields: [authorId], references: [id])
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

// model AboutMe {
//   id           Int      @id @default(autoincrement())
//   name         String
//   bio          String
//   profileImage String?
//   email        String
//   phone        String?
//   location     String?
//   resumeUrl    String?
//   experience   String[]
//   socialLinks  Json
//   skills       Skill[]
//   createdAt    DateTime @default(now())
//   updatedAt    DateTime @updatedAt
// }

// model Skill {
//   id        Int      @id @default(autoincrement())
//   name      String
//   imageUrl  String
//   aboutMeId Int
//   aboutMe   AboutMe  @relation(fields: [aboutMeId], references: [id])
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt
// }
